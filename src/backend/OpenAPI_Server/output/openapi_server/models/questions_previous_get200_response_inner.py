from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class QuestionsPreviousGet200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, question_id=None, name=None, description=None, answer=None):  # noqa: E501
        """QuestionsPreviousGet200ResponseInner - a model defined in OpenAPI

        :param question_id: The question_id of this QuestionsPreviousGet200ResponseInner.  # noqa: E501
        :type question_id: str
        :param name: The name of this QuestionsPreviousGet200ResponseInner.  # noqa: E501
        :type name: str
        :param description: The description of this QuestionsPreviousGet200ResponseInner.  # noqa: E501
        :type description: str
        :param answer: The answer of this QuestionsPreviousGet200ResponseInner.  # noqa: E501
        :type answer: str
        """
        self.openapi_types = {
            'question_id': str,
            'name': str,
            'description': str,
            'answer': str
        }

        self.attribute_map = {
            'question_id': 'questionId',
            'name': 'name',
            'description': 'description',
            'answer': 'answer'
        }

        self._question_id = question_id
        self._name = name
        self._description = description
        self._answer = answer

    @classmethod
    def from_dict(cls, dikt) -> 'QuestionsPreviousGet200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _questions_previous_get_200_response_inner of this QuestionsPreviousGet200ResponseInner.  # noqa: E501
        :rtype: QuestionsPreviousGet200ResponseInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def question_id(self) -> str:
        """Gets the question_id of this QuestionsPreviousGet200ResponseInner.


        :return: The question_id of this QuestionsPreviousGet200ResponseInner.
        :rtype: str
        """
        return self._question_id

    @question_id.setter
    def question_id(self, question_id: str):
        """Sets the question_id of this QuestionsPreviousGet200ResponseInner.


        :param question_id: The question_id of this QuestionsPreviousGet200ResponseInner.
        :type question_id: str
        """

        self._question_id = question_id

    @property
    def name(self) -> str:
        """Gets the name of this QuestionsPreviousGet200ResponseInner.


        :return: The name of this QuestionsPreviousGet200ResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this QuestionsPreviousGet200ResponseInner.


        :param name: The name of this QuestionsPreviousGet200ResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this QuestionsPreviousGet200ResponseInner.


        :return: The description of this QuestionsPreviousGet200ResponseInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this QuestionsPreviousGet200ResponseInner.


        :param description: The description of this QuestionsPreviousGet200ResponseInner.
        :type description: str
        """

        self._description = description

    @property
    def answer(self) -> str:
        """Gets the answer of this QuestionsPreviousGet200ResponseInner.


        :return: The answer of this QuestionsPreviousGet200ResponseInner.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer: str):
        """Sets the answer of this QuestionsPreviousGet200ResponseInner.


        :param answer: The answer of this QuestionsPreviousGet200ResponseInner.
        :type answer: str
        """

        self._answer = answer
