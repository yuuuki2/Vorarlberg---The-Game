from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class QuestionsCurrentGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, question_id=None, name=None, description=None, time_left=None):  # noqa: E501
        """QuestionsCurrentGet200Response - a model defined in OpenAPI

        :param question_id: The question_id of this QuestionsCurrentGet200Response.  # noqa: E501
        :type question_id: str
        :param name: The name of this QuestionsCurrentGet200Response.  # noqa: E501
        :type name: str
        :param description: The description of this QuestionsCurrentGet200Response.  # noqa: E501
        :type description: str
        :param time_left: The time_left of this QuestionsCurrentGet200Response.  # noqa: E501
        :type time_left: int
        """
        self.openapi_types = {
            'question_id': str,
            'name': str,
            'description': str,
            'time_left': int
        }

        self.attribute_map = {
            'question_id': 'questionId',
            'name': 'name',
            'description': 'description',
            'time_left': 'timeLeft'
        }

        self._question_id = question_id
        self._name = name
        self._description = description
        self._time_left = time_left

    @classmethod
    def from_dict(cls, dikt) -> 'QuestionsCurrentGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _questions_current_get_200_response of this QuestionsCurrentGet200Response.  # noqa: E501
        :rtype: QuestionsCurrentGet200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def question_id(self) -> str:
        """Gets the question_id of this QuestionsCurrentGet200Response.


        :return: The question_id of this QuestionsCurrentGet200Response.
        :rtype: str
        """
        return self._question_id

    @question_id.setter
    def question_id(self, question_id: str):
        """Sets the question_id of this QuestionsCurrentGet200Response.


        :param question_id: The question_id of this QuestionsCurrentGet200Response.
        :type question_id: str
        """

        self._question_id = question_id

    @property
    def name(self) -> str:
        """Gets the name of this QuestionsCurrentGet200Response.


        :return: The name of this QuestionsCurrentGet200Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this QuestionsCurrentGet200Response.


        :param name: The name of this QuestionsCurrentGet200Response.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this QuestionsCurrentGet200Response.


        :return: The description of this QuestionsCurrentGet200Response.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this QuestionsCurrentGet200Response.


        :param description: The description of this QuestionsCurrentGet200Response.
        :type description: str
        """

        self._description = description

    @property
    def time_left(self) -> int:
        """Gets the time_left of this QuestionsCurrentGet200Response.

        Time left in seconds  # noqa: E501

        :return: The time_left of this QuestionsCurrentGet200Response.
        :rtype: int
        """
        return self._time_left

    @time_left.setter
    def time_left(self, time_left: int):
        """Sets the time_left of this QuestionsCurrentGet200Response.

        Time left in seconds  # noqa: E501

        :param time_left: The time_left of this QuestionsCurrentGet200Response.
        :type time_left: int
        """

        self._time_left = time_left
